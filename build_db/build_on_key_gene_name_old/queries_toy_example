CALL apoc.load.csv('TranscriptionFactor.csv')
YIELD map
Create (t:TranscriptionFactor)
Set t = map;
             
CALL apoc.load.csv('OpenRegion.csv')
YIELD map
Create (o:OpenRegion)
Set o = map;

CALL apoc.load.csv('Proteins.csv')
YIELD map
Create (p:Protein)
Set p = map; 
                      
Create (s:Study{Nr: 1, Cell: "Microglia"});
Create (c:Cell{Study: 1, Cell: "Microglia"});

Match (p:Protein), (o:OpenRegion)
where (p.SYMBOL = toLower(o.nearest_SYMBOL))
Call apoc.create.relationship(o, "nearest_distance", {}, p)
YIELD rel
return count(rel);

Load csv With HEADERS from "file:///TF_target_cor.csv"
as map
Create (t:Association_temp)
set t = map;

create (s:Association_TF_tar{Study: 1, Cell: "Microglia"});

Match (a:Association_temp), (t:TranscriptionFactor{SYMBOL: a.TF}),(s:Association_TF_tar)
Create (s)-[h:hasinformationabout]->(t)
set h=a;

Match (a:Association_temp), (p:Protein{SYMBOL: toLower(a.SYMBOL)}),(s:Association_TF_tar)
Create (s)-[h:hasinformationabout]->(p)
set h=a;
                 
match(a:Association_temp)
delete a;

Load csv With HEADERS from "file:///peak_target_cor.csv"
as map
Create (t:Association_temp)
set t = map;
                 
create (s:Association_peak_tar{Study: 1, Cell: "Microglia"});
              
Match (a:Association_temp), (p:Protein{SYMBOL: toLower(a.SYMBOL)}),(s:Association_peak_tar)
Create (s)-[h:hasinformationabout]->(p)
set h=a;
                
Match (a:Association_temp), (t:OpenRegion{nearest_index: a.nearest_index}),(s:Association_peak_tar)
Create (s)-[h:hasinformationabout]->(t)
set h=a;
                 
match(a:Association_temp)
delete a;




Load csv With HEADERS from "file:///TF_motif_peak.csv"
as map
Create (t:Association_temp)
set t = map;

match (a:Association_temp),(p:TranscriptionFactor{SYMBOL:a.TF}),(s:OpenRegion{nearest_index:a.peaks})
create (s)-[r:TF_motiv_cor]->(p)
set r=a
return count(r);

match(a:Association_temp)
delete a;

Create (t:rel_or_wt12h_wt0h);

Load csv With HEADERS from "file:///rel_or_wt12h_wt0h.csv"
As map
Create (t:rel_or_wt12h_wt0h_temp)
set t = map;

Match (p:OpenRegion), (r:rel_or_wt12h_wt0h),(a:rel_or_wt12h_wt0h_temp)
where (p.nearest_index = a.nearest_index)
Create (r)-[j:isabout]->(p)
set j=a;

Create (t:rel_protein_wt24h_wt0h);

Load csv With HEADERS from "file:///rel_protein_wt24h_wt0h.csv"
As map
Create (t:rel_protein_wt24h_wt0h_temp)
set t = map;
 
Match (p:Protein), (r:rel_protein_wt24h_wt0h),(a:rel_protein_wt24h_wt0h_temp)
where (p.SYMBOL = toLower(a.SYMBOL))
Create (r)-[j:isabout]->(p)
set j=a;
     
Match (t:rel_or_wt12h_wt0h_temp)
delete t;


Match (t:rel_protein_wt24h_wt0h_temp)
delete t;

CALL apoc.load.csv('rel_string_proteins_to_proteins.csv')
                     YIELD map
                     Create (p:temp)
                     Set p = map;

match (p:temp),(a:Protein),(b:Protein)
                     where (toLower(p.protein1_prefered_name) = a.SYMBOL) and (toLower(p.protein2_prefered_name) = b.SYMBOL)
                     create (a)-[:strings_protein_link{combined_score:p.combined_score
                     }]->(b);

match (p:temp) delete (p);

CALL apoc.load.csv('KappaTerms.csv')
                     YIELD map
                     Create (p:KappaTerm)
                     Set p = map;

CALL apoc.load.csv('rel_string_funtional_terms_to_proteins.csv')
                     YIELD map
                     Create (p:temp)
                     Set p = map;

match (a:temp), (b:Protein), (c:KappaTerm)
                     where (b.SYMBOL = toLower(a.preferred_name)) and (c.name = a.description)
                     create (c)-[:connects_to]->(b);
                    
match (p:temp) delete (p);                    
                     
CALL apoc.load.csv('KappaEdges.csv')
                     YIELD map
                     Create (p:temp)
                     Set p = map;

MATCH (row:temp),(t1:KappaTerm {external_id:row.source}), (t2:KappaTerm {external_id:row.target})
                            CREATE (t1)-[:KAPPA {score: row.score}]->(t2);

match (p:temp) delete (p);
